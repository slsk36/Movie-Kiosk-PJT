<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAcAIwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4A8NfCXxV408L6prmj+GfEGraLoal9S1Cz06ae109QpYmaVVK
        xjaCcsRwM03wj8K/FHxA0fV9Q0Hw3r2t2Hh+D7TqlzYafLcw6bFtZvMndFIiXajnLEDCMexr9Zv+Dc7x
        F4Y8OfsUfHc+NFRvCup61pujaoJP9X5F6v2Nt/on7/5j2XJr2r9nn9jzS/8Agn7/AME1P2mfhhdXUN94
        8uPB3iHxHq80ZVv+JfJBqNppvI7PFZSS7SMq0riv2PF8SewrVKDhrGUUvNO138r/AIo6HO2h+Uvxd/5R
        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
        +CGlbY//2Q==
</value>
  </data>
</root>