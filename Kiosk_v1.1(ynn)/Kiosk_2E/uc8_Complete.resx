<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="doneImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>