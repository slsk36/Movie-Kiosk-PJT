<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_del.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAABFFJREFUeF7t
        nV2uFFUURi8RE14VI7yqUzBiUDAMQJ2CRKOPEhAcg+A0ABNGoaBD8CdRnIPygImg35ewk6Y5NN1V569O
        rZWs5659vl2769a56XMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCbt+R5+bF8V74ql85J6Vpck2tz
        jbDBafmt/FP+t+UjeU9+Lo/LpfCy9DX/KF3Ddl335Q15Sq6WY/KafCC3Fyjlr/J92Tvn5G8yVcO2f8ur
        0muxKk7I72RqUXb5j7woe8XX5mtMXfsub0uvySpwt9+UqYXY169lb1ySj2XqevfxjlzFJPDYTy3AIXqh
        v5S94GuZE374lRya1+VfMlX8FHuYBHPv/E39TOCH4mHx036q8Km2ngS57vxNr8th8Z8/qaLn2mIS5Lzz
        N/Wfw0PiFyCpgnNYexKUuPM3fUMOxwWZKjanNSZBqTt/0w/kcHwoU8XmtPQkKH3nh16r4TgjU8WWsMQk
        qHHnh2/L4fCmSOq9eAlzT4Jad779V46wCZbEGzupokuZYxLUvPPt93JYvEOWKrqUcydBzTs//FQOy0vy
        Z5kqvKRTJkHtO996x3NJ296T8JbulB2zOR46CVrc+Q/lWbkKvG1ae4H3bYIW4fvzet7mLsIXsvZC211f
        By3G/r6NOSQ9NQHhN6KHJiD8xrRsAsLvhFYPX4TfEa0mQS0Jfw9GbQLCP4DRmoDwJzBKExD+DJbeBISf
        gaU2AeFnZGlNQPgFWEoTEH5Bem8Cwq9Ar01A+BXprQkIvwG9NAHhN6R1ExB+B7RqAsLvhBb7+eGU/zaG
        jLQMP6QJGtFD+CFNUJmewg9pgkr0GH5IExSm5/BDmqAQSwg/pAkys6TwQ5ogE0sMP6QJZrLk8EOaYCIj
        hB/SBAcyUvghTbAnI4Yf0gQvYOTwQ5rgOXhrtXb4/rwWn8k28hYt7vwIotX/EzAJntAy/IAmaEQP4Qc0
        QWV6Cj+gCSrBz8Q9rT9vNT8T53P1+KHIZ/WavCeHxj+D+otMLUApDw0/aPF14AMnferosHhRU4WXcmr4
        QYtJ8Jkclp9kqugSzg0/qD0J7soheU1yYMSLHfbACB+hnio4t7nDD2pOgnfkcHwkU8XmtFT4Qa1JMOSh
        UT4KLVVsLkuHH9SYBP5TeTjelKlic1gr/KD0JBjy4EhT4ujY2uEHpSbB73JYbshU0VNtFX5QYhJ8I4cl
        5/HxrcMPck4CHx9/Sg7NVZkq/hB7CT/INQmuyOE5Jm/K1ALsY2/hB3MnwR3ptVkFJ+RtmVqIXfpotU9k
        r3hL19eYuvZd3pJek1XhbvfI8/dealG29S7iEs7V85buvjuefh66LFdz56fwQ891+YfcXiC/F/9B+jjV
        JZ2o6Wv1rp43dlzDdl2u1U/7fiiGDfwC5Lz0a2O/D39FLh1v7PjofNfkN3zDvuQBAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAgDocHf0P2gdmWsIsrcEAAAAASUVORK5CYII=
</value>
  </data>
</root>